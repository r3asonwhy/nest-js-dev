name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Combined job for tests and build (modify steps if needed)
  test_and_build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: npm ci

      # Add a build step here if needed (e.g., npm run build)

  # Job to deploy to AWS Elastic Beanstalk on push to main
  deploy:
    runs-on: ubuntu-latest
    needs: test_and_build  # This job depends on successful completion of test_and_build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      # No need to repeat checkout and setup steps here
      
      # Use artifacts to access build outputs from test_and_build job
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      # Extract build files (modify paths if needed)
      - name: Extract build files
        run: |
          unzip -q build-artifacts/nodejs-app-build.zip -d dist

      # Package deployment files (modify paths if needed)
      - name: Package deployment bundle (optional)
        run: |
          zip -r nodejs-app-build.zip dist package.json package-lock.json

      # Deploy to Elastic Beanstalk (same as before)
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.ES_APP_NAME }}
          environment_name: ${{ secrets.ES_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: nodejs-app-build.zip (use this only if you created a new zip)